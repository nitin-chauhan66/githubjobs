{"version":3,"sources":["components/useFetch.js","components/Jobs.js","components/pagination.js","components/SearchForm.js","App.js","serviceWorker.js","index.js"],"names":["ACTIONS","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Jobs","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","escapeHtml","height","src","company_logo","alt","Text","Button","onClick","Collapse","in","description","JobsPagination","page","setPage","handlePage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onChangeHandler","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","document","setParams","useReducer","dispatch","useEffect","cancelToken","axios","CancelToken","get","token","then","res","data","catch","e","isCancel","cancelToken1","length","cancel","useFetch","param","target","console","log","prevParams","Spinner","animation","role","map","key","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.defe9dfa.chunk.js","sourcesContent":["import { useReducer } from \"react\"\nimport { useEffect } from \"react\"\nimport axios from \"axios\";\n\n\nconst ACTIONS = {\n    MAKE_REQUEST:\"MAKE_REQUEST\",\n    GET_DATA:\"GET_DATA\",\n    ERROR:\"ERROR\",\n    UPDATE_HAS_NEXT_PAGE:\"UPDATE_HAS_NEXT_PAGE\"\n}\n\nconst BASE_URL = \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json\";\nfunction reducer(state,action){\n    switch (action.type) {\n        case ACTIONS.MAKE_REQUEST:\n            return {...state,loading:true,jobs:[]}\n        case ACTIONS.GET_DATA:\n            return {...state,loading:false,jobs:action.payload}\n        case ACTIONS.ERROR:\n            return{...state,loading:false,jobs:[],error:true}  \n        case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n            return {...state,hasNextPage:action.payload}      \n        default:\n            return state;\n    }\n}\nexport default function useFetch(params,page){\n    const [state,dispatch] = useReducer(reducer,{jobs:[],loading:true,error:false});\n    useEffect(()=>{\n        const cancelToken = axios.CancelToken.source();\n        \n        dispatch({type:ACTIONS.MAKE_REQUEST});\n      axios.get(BASE_URL,{\n          cancelToken:cancelToken.token,\n          params:{page:page,...params}\n      }).then(res=>{\n          dispatch({type:ACTIONS.GET_DATA,payload:res.data})\n      }).catch(e=>{\n          if (axios.isCancel(e)) return;\n          dispatch({type:ACTIONS.ERROR});\n      })\n      const cancelToken1 = axios.CancelToken.source();\n      axios.get(BASE_URL,{\n          cancelToken:cancelToken1.token,\n        params:{page:page+1,...params}\n    }).then(res=>{\n        dispatch({type:ACTIONS.UPDATE_HAS_NEXT_PAGE,payload:res.data.length!==0})\n    }).catch(e=>{\n        if (axios.isCancel(e)) return;\n        dispatch({type:ACTIONS.ERROR});\n    })\n      return () => {\n          cancelToken.cancel()\n          cancelToken1.cancel()\n      }\n    },[params,page])\n    return state;\n}","import React from \"react\";\nimport { Card, Badge ,Button, Collapse} from \"react-bootstrap\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport { useState } from \"react\";\nexport default function Jobs({job}){\n    const [open,setOpen] = useState(false);\n    return (\n        <Card className=\"mb-4\">\n          <Card.Body>\n              <div className=\"d-flex justify-content-between\">\n                <div>\n                    <Card.Title>\n                        {job.title} -\n                         <span className=\"text-muted font-weight-light\">\n                             {job.company}\n                        </span>\n                    </Card.Title> \n                    <Card.Subtitle className=\"text-muted mb-2\">\n                        {new Date(job.created_at).toLocaleDateString()}\n                    </Card.Subtitle>\n                    <Badge variant=\"secondary\" className=\"mr-2\">\n                        {job.type}\n                    </Badge>\n                    <Badge variant=\"secondary\">\n                        {job.location}\n                    </Badge>\n                    <div style={{wordBreak:'break-all'}}>\n                        <ReactMarkdown source={job.how_to_apply} escapeHtml={false}/>\n                    </div>\n                </div>\n              <img className=\"d-none d-md-block\" height=\"50\" \n              src={job.company_logo} alt={job.company}/>\n              </div>\n          <Card.Text>\n              <Button variant=\"primary\" onClick={()=>setOpen(!open)}>\n    {open?'Hide Details':'View Details'}</Button>\n          </Card.Text>\n          <Collapse in={open}>\n          <div className=\"mt-4\">\n              <ReactMarkdown source={job.description} escapeHtml={false}/>\n          </div>\n          </Collapse>\n          </Card.Body>\n        </Card> \n    )\n}\n","import React from \"react\";\nimport {Pagination} from \"react-bootstrap\";\n\nexport default function JobsPagination({page,setPage,hasNextPage}){\n    function handlePage(amount){\n        setPage(prevPage=>prevPage + amount);\n    }\n    return (\n        <Pagination>\n            {page!==1&&<Pagination.Prev onClick ={()=>handlePage(-1)}/>}\n            {page!==1&&<Pagination.Item onClick={()=>setPage(1)}>1</Pagination.Item>}\n            {page>2&&<Pagination.Ellipsis/>}\n            {page>2&&<Pagination.Item onClick={()=>handlePage(-1)}>{page-1}</Pagination.Item>}\n            <Pagination.Item active>{page}</Pagination.Item>\n            {hasNextPage&&<Pagination.Item onClick={()=>handlePage(1)}>{page+1}</Pagination.Item>}\n            {hasNextPage&&<Pagination.Next onClick={()=>handlePage(1)}/>}\n        </Pagination>\n    )\n}","import React from \"react\";\nimport {Form,Col} from \"react-bootstrap\"\nexport default function SearchForm({params,onChangeHandler}){\n    return(\n        <Form className=\"mb-4\">\n            <Form.Row className=\"align-items-end\">\n                <Form.Group as={Col}>\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control onChange={onChangeHandler} \n                    value={params.description} name=\"description\" type=\"text\"/>\n                </Form.Group>\n                <Form.Group as={Col}>\n                    <Form.Label>Location</Form.Label>\n                    <Form.Control onChange={onChangeHandler} \n                    value={params.location} name=\"location\" type=\"text\"/>\n                </Form.Group>\n                <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\n                    <Form.Check onChange={onChangeHandler} \n                    value={params.full_time}\n                    name=\"full_time\" id=\"full-time\" \n                    label=\"Only Full Time\" \n                    type=\"checkbox\" className=\"mb-2\"/>\n                </Form.Group>\n            </Form.Row>\n        </Form>\n    )\n}","import React, { useState } from 'react';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport useFetch from \"./components/useFetch\"\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Jobs from './components/Jobs';\nimport JobsPagination from \"./components/pagination\"\nimport SearchForm from './components/SearchForm';\nfunction App() {\n  document.title = \"Github Jobs\"\n  const [params,setParams] = useState({});\n  const [page,setPage] = useState(1);\n  const {jobs,loading,error,hasNextPage} = useFetch(params,page);\n\n  function handleParamsChange(e){\n    const param = e.target.name\n    const value = e.target.value\n    console.log(e.target);\n    setPage(1)\n    setParams(prevParams=>{\n      return {...prevParams,[param]:value}\n    })\n  }\n  return (\n    <div className=\"container my-4\">\n      <h1 className=\"mb-4\">Github Jobs</h1>\n      <SearchForm params={params} onChangeHandler={handleParamsChange}/>\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage}/>\n      {error?(<div>Error</div>):loading?(\n        <div className=\"text-center\">\n          <Spinner animation=\"border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n        </div>\n      ):(\n        jobs.map(job=>{\n          return <Jobs job={job} key = {job.id}/>\n        })\n      )}\n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}